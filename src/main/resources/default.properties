# Determines the persistent storage type for entity/component data
# Valid values are 'JDBC', and for now that is it
stacks.entity.storage.type=JDBC

stacks.entity.storage.inmemory.reader.enabled=true
stacks.entity.storage.inmemory.writer.enabled=true
stacks.entity.storage.jdbc.reader.enabled=false
stacks.entity.storage.jdbc.writer.enabled=false

stacks.entity.storage.jdbc.username=APP
stacks.entity.storage.jdbc.password=APP
stacks.entity.storage.jdbc.datasource.class=org.apache.derby.jdbc.EmbeddedDataSource
stacks.entity.storage.jdbc.datasource.properties=databaseName,createDatabase
stacks.entity.storage.jdbc.datasource.databaseName=STACKS_DB
stacks.entity.storage.jdbc.datasource.createDatabase=create
stacks.entity.storage.jdbc.table.name=ENTITY_COMPONENT
stacks.entity.storage.jdbc.table.definition=CREATE TABLE ENTITY_COMPONENT (ID BIGINT NOT NULL, COMPONENT VARCHAR(50) NOT NULL, STR_VALUE CLOB, LONG_VALUE BIGINT, FLAG_VALUE BOOLEAN, ACTIVE BOOLEAN, PRIMARY KEY (ID, COMPONENT))
stacks.entity.storage.jdbc.field.id=ID
stacks.entity.storage.jdbc.field.component=COMPONENT
stacks.entity.storage.jdbc.field.value.string=STR_VALUE
stacks.entity.storage.jdbc.field.value.long=LONG_VALUE
stacks.entity.storage.jdbc.field.value.flag=FLAG_VALUE
stacks.entity.storage.jdbc.field.active=ACTIVE
stacks.entity.storage.jdbc.query.by.id=SELECT ID, COMPONENT, STR_VALUE, LONG_VALUE, FLAG_VALUE FROM ENTITY_COMPONENT WHERE ID = ?
stacks.entity.storage.jdbc.query.by.component=SELECT ID, COMPONENT, STR_VALUE, LONG_VALUE, FLAG_VALUE FROM ENTITY_COMPONENT WHERE COMPONENT = ?

stacks.processor.list=